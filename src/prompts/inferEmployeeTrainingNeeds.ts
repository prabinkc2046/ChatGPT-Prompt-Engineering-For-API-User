import OpenAI from 'openai';
import { configDotenv } from 'dotenv';
configDotenv();

const oi = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

export const inferEmployeeTrainingNeeds = async (employeeChallenge: string) => {
  const prompt = `
  Analyze employee feedback enclosed within triple backticks to infer employee's training requirements.
  Identify following aspects: 
  Employee Name: Name of the employee mentioned in the feedback
  Skill Gap: infer the skill or area they lack and need training
  Suggested Training: infer the training suggested to fill skill gap
  Urgency: if the feeback implies that employee needs it immediately or impacting work significanly, urgency is high otherwise low.

  Format your answer as JSON object as follow:
  {
  "employee_name": "Name of the employee with skill gap in lower case",
  "skill_gap":["List of skills that employee needs training"],
  "suggested_training":["List of trainings suggested separated by commans"],
  "urgency":"high/low"
  }

  if any attribute is unknown, then mark the value for that attribute as unknown.
  `;

  try {
    const response = await oi.chat.completions.create({
      model: 'gpt-4o-mini',
      messages: [
        { role: 'system', content: prompt },
        { role: 'user', content: `\`\`\`${employeeChallenge}\`\`\`` },
      ],
    });

    const data = response.choices[0].message.content;
    if (!data) {
      console.log({ error: 'No text generated by openai' });
      return;
    }
    const processedText = JSON.parse(data);
    console.log(processedText);
  } catch (error) {
    console.log({ error: `Failed to generate text by openai, ${error}` });
    return { error: `Failed to generate text by openai, ${error}` };
  }
};

// customer order
const employeeTrainingNeeds = `Our team member Sarah is having trouble with using advanced Excel features. She has expressed interest in taking a course to improve her skills in data analysis and visualization. Other team members are generally proficient with Excel but could use some guidance on macros.
`;

inferEmployeeTrainingNeeds(employeeTrainingNeeds);
